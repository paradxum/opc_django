#!/bin/bash

#########################################################
#   Opiniated Django Project creator script
#	by Eric Schultz <eric.schultz@cyvon.com>
#########################################################
# This script creates a Django project with a bunch of
#  additional "stuff" to make it much easier to work on
#  and eventually get to a production type environment.
# This is not meant to be a FINAL configuration for you,
#  but rather a consistant starting point so you don't
#  always spend half a day getting projects set up
# Take a look at the README for more info

show_usage(){
	echo "Usage: $0 <project name> <appname>"
	exit 1
}

if [ "X$1" == "X" ] ; then
	show_usage
	fi
if [ "X$2" == "X" ] ; then
	show_usage
	fi

pname=$1
appname=$2

if [[ ! "$pname" =~ ^[a-z][a-z0-9]+[a-z]$ ]]; then
	echo "ERROR: Project name is not Kubernetes & Django Module Valid."
	echo " - contain no more than 253 characters. "
	echo " - contain only lowercase alphanumeric characters"
	echo " - start and end with an alpha character."
	echo " "
	show_usage
fi
if [[ ! "$appname" =~ ^[a-z][a-z0-9\_]+[a-z]$ ]]; then
	echo "ERROR: App name is not a valid Django Package Name."
	echo " - contain no more than 253 characters. "
	echo " - contain only lowercase alphanumeric characters, '_'"
	echo " - start and end with an alphanumeric character."
	echo " "
	show_usage
fi

export CREATE_HELM_CHART=1

export CREATE_GITLAB_PROJECT=1
export GITLAB_STORE_CREDS=1
export GITLAB_HOST="https://my_gitlab.host.com"
export GITLAB_USER="my.gitlab.username"
export GITLAB_API_TOKEN="gitlab_api_token"

export DJANO_VER=3	# 1 or 2 for latest of that version, point release for specific ver
# Note: For the docker images below, we use the -alpine version automatically
export PYTHON_VER=3.9
export POSTGRES_VER=13.2.0
export NGINX_VER=1.19.7
export REDIS_VER=6.0.10


#export BUILDER_IMAGE=opc_django:dev	# For local work on builder
export BUILDER_IMAGE=ericschultz/opc_django:latest	# Pulic Image


mkdir $pname
cwd=`pwd`
echo "Creating"
docker run --privileged \
	-v "$cwd/$pname":"/dest/$pname" \
	-v "`realpath ~`/.gitconfig":"/root/.gitconfig" \
	-v "`realpath ~`/.git-credentials":"/root/.git-credentials" \
	-e ID_UID=`id -u` -e ID_GID=`id -g` \
	-e CREATE_HELM_CHART -e CREATE_GITLAB_PROJECT -e GITLAB_STORE_CREDS -e GITLAB_HOST -e GITLAB_USER -e GITLAB_API_TOKEN -e PYTHON_VER -e POSTGRES_VER -e NGINX_VER -e REDIS_VER \
	$BUILDER_IMAGE $1 $2 >$pname.create.log 2>&1


# All Done, Print a nice message
cat <<__DONE__

  Created $pname
  Created $pname/app/$appname

  Full Stack Startup: cd $pname; docker-compose up -d
  Debug Startup: cd $pname; ./devup

  Access via: http://localhost:8000
  Local Superuser: admin/admin

__DONE__
